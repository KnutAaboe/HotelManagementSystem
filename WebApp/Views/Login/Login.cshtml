@model WebApp.guest

@{
    ViewBag.Title = "Login";
}

<h2>Login</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Guest</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @*@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })*@


            <label class="control-label col-md-2">Username: </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                
                @{ 
                    bool? isActive = Model?.username?.Length < 4;
                }

                @Html.ValidationMessageFor(model => isActive, "Username must be more then 4 Characters", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })*@


            <label class="control-label col-md-2">Password: </label>

            <div name="pwBox" class="col-md-10">
                @Html.EditorFor(model => model.pass, new { htmlAttributes = new { @class = "form-control" } })

                @{
                    bool? isActive1 = Model?.username?.Length < 4;
                }

                @Html.ValidationMessageFor(model => isActive1, "Password must be more then 4 Characters", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*<input type="submit" value="Login" class="btn btn-default" />*@
                <input type="submit" name="btnLogin" value="Login" formaction=@Url.Action("Authenticate") formmethod="post" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
